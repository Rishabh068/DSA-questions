//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution{
  public:
    // arr[] : the input array
    // N : size of the array arr[]
    
    //Function to return length of longest subsequence of consecutive integers.
    int findLongestConseqSubseq(int arr[], int n)
    {
      //Your code here
      map<int,int>mp;
      for(int i=0;i<n;i++){
          mp[arr[i]]++;
      }
      int longest=INT_MIN;
      for(int i=0;i<n;i++){
          if(mp.find(arr[i]-1)==mp.end()){
               int curr=0;
               int index=arr[i];
              while(1){
                 if(mp.find(index)!=mp.end()){
                     curr++;
                     index++;
                 }
                 else{
                     longest=max(curr,longest);
                     break;
                 }
                  
              }
          }
      }
      return longest;
    }
};

//{ Driver Code Starts.
 
// Driver program
int main()
{
 int  t,n,i,a[100001];
 cin>>t;
 while(t--)
 {
  cin>>n;
  for(i=0;i<n;i++)
  cin>>a[i];
  Solution obj;
  cout<<obj.findLongestConseqSubseq(a, n)<<endl;
 }
      
    return 0;
}
// } Driver Code Ends
