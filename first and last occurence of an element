class Solution {
public:

int firstocc(vector<int>&nums,int low,int high,int target){
    int ans=-1;
while(low<=high){
    int mid=low+(high-low)/2;
    if(nums[mid]==target){
        ans=mid;
        high=mid-1;
    }
    else if(nums[mid]>target)
    high=mid-1;
    else if(nums[mid]<target){
        low=mid+1;
    }
}
return ans;

}

int lastocc(vector<int>&nums,int low,int high,int target){
    int ans=-1;
while(low<=high){
    int mid=low+(high-low)/2;
    if(nums[mid]==target){
        ans=mid;
        low=mid+1;
    }
    else if(nums[mid]>target)
    high=mid-1;
    else if(nums[mid]<target){
        low=mid+1;
    }
}
return ans;

}

    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int>ans;
        ans.push_back(firstocc(nums,0,nums.size()-1,target));
        ans.push_back(lastocc(nums,0,nums.size()-1,target));
        return ans;

        
    }
};
