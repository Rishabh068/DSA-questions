class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        int low=0,high=nums.size()-1;
        int ans=-1;
        if(nums.size()==1)
        return nums[0];
        while(low<=high&&low<=nums.size()-1&&high>=0){
            int mid=low+(high-low)/2;
            if(mid!=0&&mid!=nums.size()-1){
            if(nums[mid]!=nums[mid-1]&&nums[mid]!=nums[mid+1])
            return nums[mid];
            else if(nums[mid]==nums[mid-1]&&mid%2==0||nums[mid]==nums[mid+1]&&(mid+1)%2==0)
            high=mid-1;
            else 
            low=mid+1;
            }
            else{
                if(mid==0&&nums[0]!=nums[1])
                return nums[0];
            else if(mid==nums.size()-1&&nums[mid]!=nums[mid-1])
            return nums[nums.size()-1];
        }
        }
        return ans;
        
    }
};
